#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        w_cut: w_cut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LC(X)>;

            mods = <(MOD_LCTL)>;
        };

        w_cc: w_cc {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&w_cut>, <&kp LC(C)>;

            mods = <MOD_LALT>;
        };

        w_yank: w_yank {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LC(V)>;

            mods = <(MOD_LCTL)>;
        };

        w_undo: w_undo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LC(Z)>;

            mods = <(MOD_LCTL)>;
        };

        prev: prev {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp P>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        next: next {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N>, <&kp DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        befr: befr {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp B>, <&kp LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        fwrd: fwrd { compatible = "zmk,behavior-mod-morph"; bindings = <&kp F>, <&kp RIGHT>; #binding-cells = <0>; mods = <(MOD_LCTL)>;};

        mod_ctrl: mod_ctrl { compatible = "zmk,behavior-mod-morph"; bindings = <&kp V>, <&kp PAGE_DOWN>; #binding-cells = <0>; mods = <MOD_LCTL>;};

        nav: nav { compatible = "zmk,behavior-mod-morph"; bindings = <&mod_ctrl>, <&kp PAGE_UP>; #binding-cells = <0>; mods = <MOD_LALT>;};

        home: home { compatible = "zmk,behavior-mod-morph"; bindings = <&kp A>, <&kp HOME>; #binding-cells = <0>; mods = <(MOD_LCTL)>;};

        end: end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp END>;

            mods = <(MOD_LCTL)>;
        };
        del: del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp DEL>;

            mods = <(MOD_LCTL)>;
        };
        srch: srch {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LC(F)>;

            mods = <(MOD_LCTL)>;
        };
        to_fn: to_fn {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp X>, <&to 3>;

            mods = <(MOD_LCTL)>;
        };
        f_find: f_find {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&to 0>, <&find>;
            mods = <MOD_LCTL>;
        };
        s_save: s_save {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&to 0>, <&save>;
            mods = <MOD_LCTL>;
        };

    };

    macros {
        to_folder: to_folder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_emacs: to_emacs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 1>,
                <&macro_release>,
                <&to 1>;
        };

        to_browser: to_browser {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_terminal: to_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_notes: to_notes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_chat: to_chat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        p1: p1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(A) &kp LS(C) &kp N1 &kp N0 &kp N8 &kp A &kp L &kp L &kp I &kp E &kp D &kp POUND &kp DLLR>;
            label = "P1";
        };

        p2: p2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp E &kp R &kp G &kp O &kp T &kp A &kp S &kp S &kp N1 &kp N2 &kp N3 &kp EXCL &kp EXCL>;
            label = "P2";
        };
        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LCTRL>,
                <&macro_press &kp P>,
                <&macro_release &kp P>,
                <&macro_release &kp LCTRL>,
                <&to 0>;
        };
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LC(S)>,
                <&macro_release &kp LC(S)>,
                <&to 0>;
        };
        saveall: saveall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press &kp LC(K)>,
                <&macro_release &kp LC(K)>,
                <&macro_press &kp S>,
                <&macro_release &kp S>,
                <&to 0>;
        };

    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
&kp EQUAL  &kp N1   &kp N2   &kp N3      &kp N4      &kp N5                         &kp N6      &kp N7        &kp N8      &kp N9    &kp N0      &kp MINUS
&kp TAB    &kp Q    &w_cc    &end        &kp R       &kp T                          &w_yank     &kp U         &kp I       &kp O     &prev       &kp LBKT
&kp BSPC   &home    &srch    &del        &fwrd       &kp G                          &kp H       &kp J         &kp K       &kp L     &kp SEMI    &kp RET
&kp BSLH   &kp Z    &to_fn   &kp C       &nav        &befr                          &next       &kp M         &kp COMMA   &kp DOT   &w_undo     &kp SQT
                             &kp RBKT    &kp LCTRL   &mt LALT ESC                   &kp LC(V)   &lt 2 SPACE   &kp LSHFT
                                         &kp LC(Z)   &kp B                          &kp GRAVE   &kp K
            >;
        };
        imacs {
            bindings = <
&trans  &trans  &trans  &trans     &trans   &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans   &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &f_find  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans   &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans     &trans   &trans                  &kp LC(Y) &trans  &trans
                                &kp LC(SLASH) &trans                 &trans  &trans
            >;
        };
        funct {
            bindings = <
&trans  &trans  &trans  &trans     &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &find   &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans     &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans     &trans  &trans                  &kp LC(Y) &trans  &trans
                                &kp LC(SLASH) &trans                 &trans  &trans
            >;
        };
    };
};