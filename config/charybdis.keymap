#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {
    behaviors {
        m_dot: m_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F12>, <&kp LC(END)>;
            mods = <MOD_LSFT>;
        };
        m_coma: m_coma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT)>, <&kp LC(HOME)>;
            mods = <MOD_LSFT>;
        };
        m_slsh: m_slsh {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>, <&kp LC(Y)>;
            mods = <MOD_LSFT>;
        };
    };

    macros {
        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(P)>,
                <&to 0>;
        };
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(S)>,
                <&to 0>;
        };
        killbfr: killbfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(W)>,
                <&to 0>;
        };
        nextbfr: nextbfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(TAB)>,
                <&to 0>;
        };
        markall: markall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(A)>,
                <&to 0>;
        };
        kill: kill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(END)>,
                <&macro_tap &kp LC(C)>,
                <&macro_tap &kp BSPC>;
        };
        b_kill: b_kill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(HOME)>,
                <&macro_tap &kp LC(C)>,
                <&macro_tap &kp BSPC>;
        };
        clear: clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(END)>,
                <&macro_tap &kp BSPC>;
        };
        b_clear: b_clear {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(HOME)>,
                <&macro_tap &kp BSPC>;
        };
        split: split {
            <&macro_tap &kp LC(BSLH)>,
            <&macro_tap &kp LC(K)>,
            <&macro_tap &kp LC(Y)>,
            <&to 0>;
        }
        sw_win: sw_win {
            <&macro_tap &kp LC(K)>,
            <&macro_tap &kp LC(Y)>,
            <&to 0>;
        }
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
&kp ESC       &kp N1     &kp N2     &kp N3     &kp N4     &kp N5                &kp N6     &kp N7     &kp N8       &kp N9      &kp N0        &kp GRAVE
&kp TAB       &kp Q      &kp W      &kp E      &kp R      &kp T                 &kp Y      &kp U      &kp I        &kp O       &kp P         &kp DEL
&kp BSPC      &kp A      &kp S      &kp D      &kp F      &kp G                 &kp H      &kp J      &kp K        &kp L       &kp SEMI      &kp RET
&kp LBKT      &kp Z      &kp X      &kp C      &kp V      &kp B                 &kp N      &kp M      &kp COMMA    &kp DOT     &kp SLASH     &kp RBKT
                                    &mo 2      &mo 1      &kp SQT               &mo 4      &kp SPACE  &kp LSHFT
                                               &kp MINUS  &kp BSLH                         &kp PLUS  &kp EQUAL
            >;
        };
        control {
            display-name = "control";
            bindings = <
&trans     &trans     &trans     &trans      &trans       &trans                &trans     &trans     &trans       &trans      &trans        &trans
&trans     &trans     &kp LC(X)  &kp END     &kp LS(F3)   &trans                &kp LC(V)  &trans     &trans       &trans      &kp UP        &clear
&b_clear   &kp HOME   &kp LC(F)  &trans     &kp RIGHT    &trans                &trans     &trans     &kill        &kp LC(L)   &kp LC(GRAVE) &trans
&kp LC(B)  &trans     &to 3      &trans      &kp PG_DN    &kp LEFT              &kp DOWN   &trans     &kp LC(DOT)  &kp LC(F12) &kp LC(Z)     &kp LC(J)
                                    &trans      &trans       &trans                &trans     &trans     &trans
                                                &trans       &trans                &trans     &trans
            >;
        };
        meta {
            display-name = "meta";
            bindings = <
&trans        &trans  &trans     &trans   &trans        &trans                &trans     &trans    &trans       &trans     &trans       &trans
&trans        &trans  &kp LC(C)  &trans   &trans        &trans                &trans     &trans    &trans       &trans     &trans       &kp LC(DEL)
&kp LC(BSPC)  &trans  &trans     &trans   &kp LC(RIGHT) &trans                &trans     &trans    &b_kill      &trans     &trans       &trans
&trans        &trans  &trans     &trans   &kp PG_UP     &kp LC(LEFT)          &trans     &trans    &m_coma      &m_dot     &m_slsh      &trans
                                 &trans   &trans        &trans                &trans     &trans    &trans
                                          &trans        &trans                &trans     &trans
            >;
        };
        prefix {
            display-name = "prefix";
            bindings = <
&trans       &trans       &trans     &split    &trans   &trans                 &trans      &trans     &trans      &trans     &trans     &trans
&trans       &trans       &trans     &trans    &trans   &trans                 &trans      &trans     &trans      &sw_win     &trans     &trans
&trans       &trans       &save      &trans    &find    &to 0                  &markall    &trans     &killbfr    &trans     &trans     &trans
&trans       &trans       &trans     &trans    &trans   &nextbfr               &trans      &trans     &trans      &trans     &trans     &trans
                                     &trans    &trans   &trans                 &trans      &trans     &trans
                                               &trans   &trans                 &trans      &trans
            >;
        };
    };
};